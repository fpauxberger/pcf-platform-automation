templating:

- &interpolate-creds
  image: platform-automation-image
  file: platform-automation-tasks/tasks/credhub-interpolate.yml
  params:
    CREDHUB_CLIENT: ((credhub-client))
    CREDHUB_SECRET: ((credhub-secret))
    CREDHUB_SERVER: ((credhub-server))
    PREFIX: '/private-foundation'
    INTERPOLATION_PATHS: ((foundation))/config ((foundation))/env
    SKIP_MISSING: true
  input_mapping:
    files: configuration
  output_mapping:
    interpolated-files: interpolated-creds


resource_types:

- name: pivnet
  type: docker-image
  source:
    repository: pivotalcf/pivnet-resource
    tag: latest-final

resources:

- name: tf_iaas
  type: git
  source: 
    uri: https://github.com/pivotal-cf/terraforming-aws
- name: automate_allthethings
  type: git
  source:
    uri: https://github.com/fpauxberger/pcf-platform-automation.git
- name: terraform-output-s3
  type: s3
  source:
    access_key_id: ((access_key_id))
    secret_access_key: ((secret_access_key))
    region_name: ((region))
    bucket: ((bucket))
    regexp: terraform.(.*).out
- name: opsmanconfig-output-s3
  type: s3
  source:
    access_key_id: ((access_key_id))
    secret_access_key: ((secret_access_key))
    region_name: ((region))
    bucket: ((bucket))
    regexp: opsman.(.*).yml
- name: config
  type: s3
  source:
    access_key_id: ((access_key_id))
    secret_access_key: ((secret_access_key))
    region_name: ((region))
    bucket: ((bucket))
    regexp: opsman.(.*).yml
- name: platform-automation-tasks
  type: s3
  source:
    access_key_id: ((access_key_id))
    secret_access_key: ((secret_access_key))
    region_name: ((region))
    bucket: ((bucket))
    regexp: platform-automation-tasks-(.*).zip
- name: platform-automation-image
  type: s3
  source:
    access_key_id: ((access_key_id))
    secret_access_key: ((secret_access_key))
    region_name: ((region))
    bucket: ((bucket))
    regexp: platform-automation-image-(.*).tgz

# configurations
- name: configuration
  type: git
  source:
    private_key: ((configuration.private_key))
    uri: ((configuration.uri))
    branch: master

- name: variable
  type: git
  source:
    private_key: ((variable.private_key))
    uri: ((variable.uri))
    branch: master

jobs:

- name: pave_iaas_job
  public: true
  serial: true
  plan: 
  - get: tf_iaas 
    trigger: false
  - get: automate_allthethings
    trigger: false
  - task: pave_iaas_task
    file: automate_allthethings/tasks/pave_iaas.yml
    params:
      ACCESS_KEY: ((access_key_id))
      SECRET_KEY: ((secret_access_key))
  - put: terraform-output-s3
    params: 
      file: terraform-output/terraform.*.out

- name: create-opsman-config
  public: true
  serial: true
  plan:
    - get: automate_allthethings
      trigger: false
    - get: terraform-output-s3
      trigger: false
    - task: create-opsman-config
      file: automate_allthethings/tasks/create_opsman_config.yml
    - put: opsmanconfig-output-s3
      params: 
        file: opsmanconfig-output/opsman.*.yml

- name: install-opsman
  public: true
  serial: true
  plan:
    - get: automate_allthethings
      passed: [create-opsman-config]
      trigger: true
    - get: platform-automation-image
      trigger: false
      params:
        globs: ["*image*.tgz"]
        unpack: true    
    - get: platform-automation-tasks
      trigger: false
      params:
        globs: ["*tasks*.zip"]
        unpack: true    
    - get: opsmanconfig-output-s3
      trigger: false
    - get: config
      trigger: false
    - get: configuration
      trigger: false
    - task: interpolate-download-opsman-image-creds
      image: platform-automation-image
      file: platform-automation-tasks/tasks/credhub-interpolate.yml
      params:
        CREDHUB_CLIENT: ((credhub-client))
        CREDHUB_SECRET: ((credhub-secret))
        CREDHUB_SERVER: ((credhub-server))
        CREDHUB_CA_CERT: |
          -----BEGIN CERTIFICATE-----
          MIIDJjCCAg6gAwIBAgIRAKcRzVYtbO3ZNG39/Dt5bc8wDQYJKoZIhvcNAQELBQAw
          PDEMMAoGA1UEBhMDVVNBMRYwFAYDVQQKEw1DbG91ZCBGb3VuZHJ5MRQwEgYDVQQD
          EwtDb25jb3Vyc2VDQTAeFw0xOTA3MDIwOTI2MzlaFw0yMDA3MDEwOTI2MzlaMDwx
          DDAKBgNVBAYTA1VTQTEWMBQGA1UEChMNQ2xvdWQgRm91bmRyeTEUMBIGA1UEAxML
          Q29uY291cnNlQ0EwggEiMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQDZsK/9
          Z7SH/VRiPSQcWaEcsBF3tb9djgzeTbyWmuUtCCyqt8PTjTdPkq9/W+KcJSZVUrO/
          in8Dd5U5cjv6KswQYupTTD69xr8xz47rv64CV2x7MypYmEbHDTQ9rgM5l7kpf2y8
          PgxqWj47A4qe7+PwdjUedCbptm/t50wGpO3HPNYAP0X6GpLGMJmzqmgvLPCWcWLn
          JLNE6KID3keq7hzoi4mLpi2wNtpUXCin9/UPoMDGQEM1JEWZWpTSKr+Y5Mm42Sxl
          AoGROvbFigLNlSV26/T1mWmel4n7lo54BQvFvRX+D/1yV1vgccI5QLBGgGmFhbbI
          9P0uA/oesO2iMfh/AgMBAAGjIzAhMA4GA1UdDwEB/wQEAwIBBjAPBgNVHRMBAf8E
          BTADAQH/MA0GCSqGSIb3DQEBCwUAA4IBAQDFnomJMAuvMWgsFhTZpQpNspyxFlil
          WyMqSasR/3T4bG7RWrN+Qgt8R/Zy063wGN954dD3mp3QhPyGgHxDdvQpTBhktNXt
          uIRtrklSyDthOb36ze1tSoSmJrFjws2pNsAxOzgdH8kxT8JtTiiM5p0keJiYbYf2
          AIlAoK6bxxQKjOjlKoI+MtaA9+9VzXLfB82M1ZjmWXVxs2g+NbpKjawKKYgR8iJm
          Ql0eWjDwyc/RfTVVk7r7dxK+4L3CRdP6rBEg4wBrB4xiriKJ3wxjNtNd4nB110s2
          lI+u789/d6BkTO83yt23mfri8TrxxCpfxcfHdfahZfN4zeg2ZLy3pYN2
          -----END CERTIFICATE----- 
        PREFIX: '/private-foundation'
        INTERPOLATION_PATHS: "download-product-configs"
        SKIP_MISSING: true
      input_mapping:
        files: configuration
      output_mapping:
        interpolated-files: product-configs
    - task: download-opsman-image
      image: platform-automation-image
      file: platform-automation-tasks/tasks/download-product-s3.yml
      params:
        CONFIG_FILE: download-product-configs/opsman.yml
        input_mapping:
          config: product-configs
        output_mapping:
          downloaded-product: opsman-image
    - get: variable
    - task: interpolate-creds
      <<: *interpolate-creds
    - task: create-vm
      image: platform-automation-image
      file: platform-automation-tasks/tasks/create-vm.yml
      input_mapping:
        image: opsman-image
        state: configuration
        config: interpolated-creds
        vars: variable
      params:
        VARS_FILES: vars/((foundation))/vars/opsman-vars.yml
        STATE_FILE: ((foundation))/state/state.yml
        OPSMAN_CONFIG_FILE: ((foundation))/config/opsman.yml
      ensure: &make-state-commit
        do:
          - task: make-commit
            image: platform-automation-image
            file: platform-automation-tasks/tasks/make-git-commit.yml
            input_mapping:
              repository: configuration
              file-source: generated-state
            output_mapping:
              repository-commit: configuration-commit
            params:
              FILE_SOURCE_PATH: state.yml
              FILE_DESTINATION_PATH: ((foundation))/state/state.yml
              GIT_AUTHOR_EMAIL: ((git-email))
              GIT_AUTHOR_NAME: "Platform Automation Bot"
              COMMIT_MESSAGE: 'Update state file'
          - put: configuration
            params:
              repository: configuration-commit
              merge: true
    - task: configure-authentication
      image: platform-automation-image
      file: platform-automation-tasks/tasks/configure-authentication.yml
      attempts: 10
      input_mapping:
        env: configuration
        config: interpolated-creds
      params:
        ENV_FILE: ((foundation))/env/env.yml
        AUTH_CONFIG_FILE: ((foundation))/config/auth.yml

